Requirements:
	- Eclipse
	- Maven (most Eclipse installations include it)
	- Java 8+

Instructions

Clone the digio-programming-task repo
Launch Eclipse and import the project
	File -> Import -> Maven -> Existing Maven Projects
	Select the root directory using Browse
	Finish
Configure the debug configurations
	Java Application
		Run -> Debug Configurations -> Java Application -> New launch configuration
		In the Main tab
			Name the configuration
			Select the digio-programming-task using Browse
			Select the Main class in the default package using Search
		In the Arguments tab
			In the VM arguments field, you can configure the source path of the test file using the -Dfilepath argument
				Example: -Dfilepath="./files/programming-task-example-data.log"
		Hit Apply and Debug
	JUnit
		Run -> Debug Configuration -> JUnit -> New launch configuration
		In the Test tab
			Name the configuration
			Select Run all tests...
			Search and select digio-programming-task project and the test folder
				Note: the test folder may not be included in the build path by default, in that case right-click on the test folder and select Build Path -> Use as a Source Folder
			Under Test runner, select JUnit 5
			Hit Apply and Debug

I have encapsulated the business logic inside of concrete service classes, which implement service interfaces referenced in the Main driver class and in the test classes. Services are provided their constituent services using setter methods (this is typically done with some kind of autowiring framework like OSGI, which I have eschewed for simplicity's sake). This design choice decouples usage from implementation and affords me the flexibility to change the business logic implementation without having to modify the client class.

For development purpose, I have assumed that the entries in the log file are valid. I have also deliberately not written test cases for the logger service, since it is just a trivial wrapper for log4j. Test data is included in the files directory.
